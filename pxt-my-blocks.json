{"README.md":"\n> Open this page at [https://gozzilajp.github.io/pxt-my-blocks/](https://gozzilajp.github.io/pxt-my-blocks/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/gozzilajp/pxt-my-blocks** and import\n\n## Edit this project ![Build status badge](https://github.com/gozzilajp/pxt-my-blocks/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/gozzilajp/pxt-my-blocks** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/gozzilajp/pxt-my-blocks/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","myBlocks.cpp":"namespace myBlocks {\n\t//%\n\tfloat cToF(float value) {\n\t\treturn value * 1.8 + 32.0;\n\t}\n\n\t//%\n\tfloat fToC(float value) {\n\t\treturn (value - 32.0) / 1.8 ;\n\t}\n}\n","myBlocks.ts":"enum TempConvertType {\n\t//% block=\"째C -> 째F\"\n\tCtoF,\n\t//% block=\"째F -> 째C\"\n\tFtoC,\n}\n\nnamespace myBlocks {\n\t//% blockId=myBlocks_convertTemperature\n\t//% block=\"convert|%value|%convertType\"\n\texport function convertTemperature(value:number, convertType:TempConvertType):number {\n\t\tif (convertType == TempConvertType.CtoF) {\n\t\t\treturn cToF(value);\n\t\t}\n\t\tif (convertType == TempConvertType.FtoC) {\n\t\t\treturn fToC(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\t//% shim=myBlocks::cToF\n\tfunction cToF(value:number){\n        return 32.0;\n\t}\n\n\t//% shim=myBlocks::fToC\n\tfunction fToC(value:number){\n        return 32.0;\n\t}\n}\n","pxt.json":"{\n    \"name\": \"pxt-my-blocks\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\"\n    },\n    \"files\": [\n        \"myBlocks.ts\",\n        \"myBlocks.cpp\",\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"5.0.12\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}